# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TemporalAnalysis(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, time_period: Object=None, model_type: Object=None, input_data: Object=None, forecast_horizon: Object=None):  # noqa: E501
        """TemporalAnalysis - a model defined in Swagger

        :param time_period: The time_period of this TemporalAnalysis.  # noqa: E501
        :type time_period: Object
        :param model_type: The model_type of this TemporalAnalysis.  # noqa: E501
        :type model_type: Object
        :param input_data: The input_data of this TemporalAnalysis.  # noqa: E501
        :type input_data: Object
        :param forecast_horizon: The forecast_horizon of this TemporalAnalysis.  # noqa: E501
        :type forecast_horizon: Object
        """
        self.swagger_types = {
            'time_period': Object,
            'model_type': Object,
            'input_data': Object,
            'forecast_horizon': Object
        }

        self.attribute_map = {
            'time_period': 'time_period',
            'model_type': 'model_type',
            'input_data': 'input_data',
            'forecast_horizon': 'forecast_horizon'
        }
        self._time_period = time_period
        self._model_type = model_type
        self._input_data = input_data
        self._forecast_horizon = forecast_horizon

    @classmethod
    def from_dict(cls, dikt) -> 'TemporalAnalysis':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TemporalAnalysis of this TemporalAnalysis.  # noqa: E501
        :rtype: TemporalAnalysis
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_period(self) -> Object:
        """Gets the time_period of this TemporalAnalysis.

        Time period for tracking population dynamics (e.g., seasonal, yearly).  # noqa: E501

        :return: The time_period of this TemporalAnalysis.
        :rtype: Object
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period: Object):
        """Sets the time_period of this TemporalAnalysis.

        Time period for tracking population dynamics (e.g., seasonal, yearly).  # noqa: E501

        :param time_period: The time_period of this TemporalAnalysis.
        :type time_period: Object
        """

        self._time_period = time_period

    @property
    def model_type(self) -> Object:
        """Gets the model_type of this TemporalAnalysis.

        Model for performing time-series analysis.  # noqa: E501

        :return: The model_type of this TemporalAnalysis.
        :rtype: Object
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type: Object):
        """Sets the model_type of this TemporalAnalysis.

        Model for performing time-series analysis.  # noqa: E501

        :param model_type: The model_type of this TemporalAnalysis.
        :type model_type: Object
        """

        self._model_type = model_type

    @property
    def input_data(self) -> Object:
        """Gets the input_data of this TemporalAnalysis.

        The dataset used for temporal analysis (e.g., weather patterns, satellite data).  # noqa: E501

        :return: The input_data of this TemporalAnalysis.
        :rtype: Object
        """
        return self._input_data

    @input_data.setter
    def input_data(self, input_data: Object):
        """Sets the input_data of this TemporalAnalysis.

        The dataset used for temporal analysis (e.g., weather patterns, satellite data).  # noqa: E501

        :param input_data: The input_data of this TemporalAnalysis.
        :type input_data: Object
        """

        self._input_data = input_data

    @property
    def forecast_horizon(self) -> Object:
        """Gets the forecast_horizon of this TemporalAnalysis.

        Number of periods to forecast into the future.  # noqa: E501

        :return: The forecast_horizon of this TemporalAnalysis.
        :rtype: Object
        """
        return self._forecast_horizon

    @forecast_horizon.setter
    def forecast_horizon(self, forecast_horizon: Object):
        """Sets the forecast_horizon of this TemporalAnalysis.

        Number of periods to forecast into the future.  # noqa: E501

        :param forecast_horizon: The forecast_horizon of this TemporalAnalysis.
        :type forecast_horizon: Object
        """

        self._forecast_horizon = forecast_horizon
